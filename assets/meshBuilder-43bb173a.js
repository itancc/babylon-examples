import{L as T,V as I,ac as p,a2 as X,a6 as U,ad as W,ae as Y,M as R,n as E,x as j,af as N,ag as q,ah as H,ai as k,aj as K,ak as Q,al as J,am as _,an as $,ao as ee,ap as te,aq as se,ar as ae,as as oe,at as ne,au as ie,av as re,aw as ce,ax as he,ay as le,az as fe,aA as xe,aB as de,aC as Ae,aD as ue,aE as ye,aF as Be}from"./renderLoop-33e00bb4.js";class v{constructor(t=0,e=0){this.x=t,this.y=e,t!==Math.floor(t)&&T.Warn("x is not an integer, floor(x) used"),e!==Math.floor(e)&&T.Warn("y is not an integer, floor(y) used")}clone(){return new v(this.x,this.y)}rotate60About(t){const e=this.x;return this.x=t.x+t.y-this.y,this.y=e+this.y-t.x,this}rotateNeg60About(t){const e=this.x;return this.x=e+this.y-t.y,this.y=t.x+t.y-e,this}rotate120(t,e){t!==Math.floor(t)&&T.Warn("m not an integer only floor(m) used"),e!==Math.floor(e)&&T.Warn("n not an integer only floor(n) used");const a=this.x;return this.x=t-a-this.y,this.y=e+a,this}rotateNeg120(t,e){t!==Math.floor(t)&&T.Warn("m is not an integer, floor(m) used"),e!==Math.floor(e)&&T.Warn("n is not an integer,   floor(n) used");const a=this.x;return this.x=this.y-e,this.y=t+e-a-this.y,this}toCartesianOrigin(t,e){const a=I.Zero();return a.x=t.x+2*this.x*e+this.y*e,a.y=t.y+Math.sqrt(3)*this.y*e,a}static Zero(){return new v(0,0)}}class S{constructor(){this.cartesian=[],this.vertices=[],this.max=[],this.min=[],this.closestTo=[],this.innerFacets=[],this.isoVecsABOB=[],this.isoVecsOBOA=[],this.isoVecsBAOA=[],this.vertexTypes=[],this.IDATA=new Z("icosahedron","Regular",[[0,p,-1],[-p,1,0],[-1,0,-p],[1,0,-p],[p,1,0],[0,p,1],[-1,0,p],[-p,-1,0],[0,-p,-1],[p,-1,0],[1,0,p],[0,-p,1]],[[0,2,1],[0,3,2],[0,4,3],[0,5,4],[0,1,5],[7,6,1],[8,7,2],[9,8,3],[10,9,4],[6,10,5],[2,7,1],[3,8,2],[4,9,3],[5,10,4],[1,6,5],[11,6,7],[11,7,8],[11,8,9],[11,9,10],[11,10,6]])}setIndices(){let t=12;const e={},a=this.m,s=this.n;let i=a,o=1,r=0;s!==0&&(i=U.HCF(a,s)),o=a/i,r=s/i;let h,f,y,g,d;const w=v.Zero(),A=new v(a,s),B=new v(-s,a+s),u=v.Zero(),D=v.Zero(),O=v.Zero();let b=[],l,n,c,V;const z=[],x=this.vertByDist,F=(C,m,G,L)=>{l=C+"|"+G,n=m+"|"+L,l in e||n in e?l in e&&!(n in e)?e[n]=e[l]:n in e&&!(l in e)&&(e[l]=e[n]):(e[l]=t,e[n]=t,t++),x[G][0]>2?z[e[l]]=[-x[G][0],x[G][1],e[l]]:z[e[l]]=[b[x[G][0]],x[G][1],e[l]]};this.IDATA.edgematch=[[1,"B"],[2,"B"],[3,"B"],[4,"B"],[0,"B"],[10,"O",14,"A"],[11,"O",10,"A"],[12,"O",11,"A"],[13,"O",12,"A"],[14,"O",13,"A"],[0,"O"],[1,"O"],[2,"O"],[3,"O"],[4,"O"],[19,"B",5,"A"],[15,"B",6,"A"],[16,"B",7,"A"],[17,"B",8,"A"],[18,"B",9,"A"]];for(let C=0;C<20;C++){if(b=this.IDATA.face[C],y=b[2],g=b[1],d=b[0],c=w.x+"|"+w.y,l=C+"|"+c,l in e||(e[l]=y,z[y]=[b[x[c][0]],x[c][1]]),c=A.x+"|"+A.y,l=C+"|"+c,l in e||(e[l]=g,z[g]=[b[x[c][0]],x[c][1]]),c=B.x+"|"+B.y,l=C+"|"+c,l in e||(e[l]=d,z[d]=[b[x[c][0]],x[c][1]]),h=this.IDATA.edgematch[C][0],f=this.IDATA.edgematch[C][1],f==="B")for(let m=1;m<i;m++)D.x=a-m*(o+r),D.y=s+m*o,O.x=-m*r,O.y=m*(o+r),c=D.x+"|"+D.y,V=O.x+"|"+O.y,F(C,h,c,V);if(f==="O")for(let m=1;m<i;m++)O.x=-m*r,O.y=m*(o+r),u.x=m*o,u.y=m*r,c=O.x+"|"+O.y,V=u.x+"|"+u.y,F(C,h,c,V);if(h=this.IDATA.edgematch[C][2],f=this.IDATA.edgematch[C][3],f&&f==="A")for(let m=1;m<i;m++)u.x=m*o,u.y=m*r,D.x=a-(i-m)*(o+r),D.y=s+(i-m)*o,c=u.x+"|"+u.y,V=D.x+"|"+D.y,F(C,h,c,V);for(let m=0;m<this.vertices.length;m++)c=this.vertices[m].x+"|"+this.vertices[m].y,l=C+"|"+c,l in e||(e[l]=t++,x[c][0]>2?z[e[l]]=[-x[c][0],x[c][1],e[l]]:z[e[l]]=[b[x[c][0]],x[c][1],e[l]])}this.closestTo=z,this.vecToidx=e}calcCoeffs(){const t=this.m,e=this.n,a=Math.sqrt(3)/3,s=t*t+e*e+t*e;this.coau=(t+e)/s,this.cobu=-e/s,this.coav=-a*(t-e)/s,this.cobv=a*(2*t+e)/s}createInnerFacets(){const t=this.m,e=this.n;for(let a=0;a<e+t+1;a++)for(let s=this.min[a];s<this.max[a]+1;s++)s<this.max[a]&&s<this.max[a+1]+1&&this.innerFacets.push(["|"+s+"|"+a,"|"+s+"|"+(a+1),"|"+(s+1)+"|"+a]),a>0&&s<this.max[a-1]&&s+1<this.max[a]+1&&this.innerFacets.push(["|"+s+"|"+a,"|"+(s+1)+"|"+a,"|"+(s+1)+"|"+(a-1)])}edgeVecsABOB(){const t=this.m,e=this.n,a=new v(-e,t+e);for(let s=1;s<t+e;s++){const i=new v(this.min[s],s),o=new v(this.min[s-1],s-1),r=new v(this.min[s+1],s+1),h=i.clone(),f=o.clone(),y=r.clone();h.rotate60About(a),f.rotate60About(a),y.rotate60About(a);const g=new v(this.max[h.y],h.y),d=new v(this.max[h.y-1],h.y-1),w=new v(this.max[h.y-1]-1,h.y-1);(h.x!==g.x||h.y!==g.y)&&(h.x!==d.x?(this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,d,w]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,w,g])):h.y===y.y?(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([i,o,d]),this.vertexTypes.push([1,0,1]),this.isoVecsABOB.push([i,d,r])):(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([i,o,d]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,d,g])))}}mapABOBtoOBOA(){const t=new v(0,0);for(let e=0;e<this.isoVecsABOB.length;e++){const a=[];for(let s=0;s<3;s++)t.x=this.isoVecsABOB[e][s].x,t.y=this.isoVecsABOB[e][s].y,this.vertexTypes[e][s]===0&&t.rotateNeg120(this.m,this.n),a.push(t.clone());this.isoVecsOBOA.push(a)}}mapABOBtoBAOA(){const t=new v(0,0);for(let e=0;e<this.isoVecsABOB.length;e++){const a=[];for(let s=0;s<3;s++)t.x=this.isoVecsABOB[e][s].x,t.y=this.isoVecsABOB[e][s].y,this.vertexTypes[e][s]===1&&t.rotate120(this.m,this.n),a.push(t.clone());this.isoVecsBAOA.push(a)}}MapToFace(t,e){const a=this.IDATA.face[t],s=a[2],i=a[1],o=a[0],r=I.FromArray(this.IDATA.vertex[s]),h=I.FromArray(this.IDATA.vertex[i]),f=I.FromArray(this.IDATA.vertex[o]),y=h.subtract(r),g=f.subtract(r),d=y.scale(this.coau).add(g.scale(this.cobu)),w=y.scale(this.coav).add(g.scale(this.cobv));let A,B=X.Vector3[0];for(let u=0;u<this.cartesian.length;u++)B=d.scale(this.cartesian[u].x).add(w.scale(this.cartesian[u].y)).add(r),B.x,B.y,B.z,A=t+"|"+this.vertices[u].x+"|"+this.vertices[u].y,e.vertex[this.vecToidx[A]]=[B.x,B.y,B.z]}build(t,e){const a=new Array,s=v.Zero(),i=new v(t,e),o=new v(-e,t+e);a.push(s,i,o);for(let n=e;n<t+1;n++)for(let c=0;c<t+1-n;c++)a.push(new v(c,n));if(e>0){const n=U.HCF(t,e),c=t/n,V=e/n;for(let x=1;x<n;x++)a.push(new v(x*c,x*V)),a.push(new v(-x*V,x*(c+V))),a.push(new v(t-x*(c+V),e+x*c));const z=t/e;for(let x=1;x<e;x++)for(let F=0;F<x*z;F++)a.push(new v(F,x)),a.push(new v(F,x).rotate120(t,e)),a.push(new v(F,x).rotateNeg120(t,e))}a.sort((n,c)=>n.x-c.x),a.sort((n,c)=>n.y-c.y);const r=new Array(t+e+1),h=new Array(t+e+1);for(let n=0;n<r.length;n++)r[n]=1/0,h[n]=-1/0;let f=0,y=0;const g=a.length;for(let n=0;n<g;n++)y=a[n].x,f=a[n].y,r[f]=Math.min(y,r[f]),h[f]=Math.max(y,h[f]);const d=(n,c)=>{const V=n.clone();return c==="A"&&V.rotateNeg120(t,e),c==="B"&&V.rotate120(t,e),V.x<0?V.y:V.x+V.y},w=[],A=[],B=[],u=[],D={},O=[];let b=-1,l=-1;for(let n=0;n<g;n++)w[n]=a[n].toCartesianOrigin(new v(0,0),.5),A[n]=d(a[n],"O"),B[n]=d(a[n],"A"),u[n]=d(a[n],"B"),A[n]===B[n]&&B[n]===u[n]?(b=3,l=A[n]):A[n]===B[n]?(b=4,l=A[n]):B[n]===u[n]?(b=5,l=B[n]):u[n]===A[n]&&(b=6,l=A[n]),A[n]<B[n]&&A[n]<u[n]&&(b=2,l=A[n]),B[n]<A[n]&&B[n]<u[n]&&(b=1,l=B[n]),u[n]<B[n]&&u[n]<A[n]&&(b=0,l=u[n]),O.push([b,l,a[n].x,a[n].y]);O.sort((n,c)=>n[2]-c[2]),O.sort((n,c)=>n[3]-c[3]),O.sort((n,c)=>n[1]-c[1]),O.sort((n,c)=>n[0]-c[0]);for(let n=0;n<O.length;n++)D[O[n][2]+"|"+O[n][3]]=[O[n][0],O[n][1],n];return this.m=t,this.n=e,this.vertices=a,this.vertByDist=D,this.cartesian=w,this.min=r,this.max=h,this}}class Z{constructor(t,e,a,s){this.name=t,this.category=e,this.vertex=a,this.face=s}}class P extends Z{innerToData(t,e){for(let a=0;a<e.innerFacets.length;a++)this.face.push(e.innerFacets[a].map(s=>e.vecToidx[t+s]))}mapABOBtoDATA(t,e){const a=e.IDATA.edgematch[t][0];for(let s=0;s<e.isoVecsABOB.length;s++){const i=[];for(let o=0;o<3;o++)e.vertexTypes[s][o]===0?i.push(t+"|"+e.isoVecsABOB[s][o].x+"|"+e.isoVecsABOB[s][o].y):i.push(a+"|"+e.isoVecsABOB[s][o].x+"|"+e.isoVecsABOB[s][o].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}mapOBOAtoDATA(t,e){const a=e.IDATA.edgematch[t][0];for(let s=0;s<e.isoVecsOBOA.length;s++){const i=[];for(let o=0;o<3;o++)e.vertexTypes[s][o]===1?i.push(t+"|"+e.isoVecsOBOA[s][o].x+"|"+e.isoVecsOBOA[s][o].y):i.push(a+"|"+e.isoVecsOBOA[s][o].x+"|"+e.isoVecsOBOA[s][o].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}mapBAOAtoDATA(t,e){const a=e.IDATA.edgematch[t][2];for(let s=0;s<e.isoVecsBAOA.length;s++){const i=[];for(let o=0;o<3;o++)e.vertexTypes[s][o]===1?i.push(t+"|"+e.isoVecsBAOA[s][o].x+"|"+e.isoVecsBAOA[s][o].y):i.push(a+"|"+e.isoVecsBAOA[s][o].x+"|"+e.isoVecsBAOA[s][o].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}orderData(t){const e=[];for(let o=0;o<13;o++)e[o]=[];const a=t.closestTo;for(let o=0;o<a.length;o++)a[o][0]>-1?a[o][1]>0&&e[a[o][0]].push([o,a[o][1]]):e[12].push([o,a[o][0]]);const s=[];for(let o=0;o<12;o++)s[o]=o;let i=12;for(let o=0;o<12;o++){e[o].sort((r,h)=>r[1]-h[1]);for(let r=0;r<e[o].length;r++)s[e[o][r][0]]=i++}for(let o=0;o<e[12].length;o++)s[e[12][o][0]]=i++;for(let o=0;o<this.vertex.length;o++)this.vertex[o].push(s[o]);this.vertex.sort((o,r)=>o[3]-r[3]);for(let o=0;o<this.vertex.length;o++)this.vertex[o].pop();for(let o=0;o<this.face.length;o++)for(let r=0;r<this.face[o].length;r++)this.face[o][r]=s[this.face[o][r]];this.sharedNodes=e[12].length,this.poleNodes=this.vertex.length-this.sharedNodes}setOrder(t,e){const a=[],s=[];let i=e.pop();s.push(i);let o=this.face[i].indexOf(t);o=(o+2)%3;let r=this.face[i][o];a.push(r);let h=0;for(;e.length>0;)i=e[h],this.face[i].indexOf(r)>-1?(o=(this.face[i].indexOf(r)+1)%3,r=this.face[i][o],a.push(r),s.push(i),e.splice(h,1),h=0):h++;return this.adjacentFaces.push(a),s}toGoldbergPolyhedronData(){const t=new Z("GeoDual","Goldberg",[],[]);t.name="GD dual";const e=this.vertex.length,a=new Array(e);for(let f=0;f<e;f++)a[f]=[];for(let f=0;f<this.face.length;f++)for(let y=0;y<3;y++)a[this.face[f][y]].push(f);let s=0,i=0,o=0,r=[],h=[];this.adjacentFaces=[];for(let f=0;f<a.length;f++)t.face[f]=this.setOrder(f,a[f].concat([])),a[f].forEach(y=>{s=0,i=0,o=0,r=this.face[y];for(let g=0;g<3;g++)h=this.vertex[r[g]],s+=h[0],i+=h[1],o+=h[2];t.vertex[y]=[s/3,i/3,o/3]});return t}static BuildGeodesicData(t){const e=new P("Geodesic-m-n","Geodesic",[[0,p,-1],[-p,1,0],[-1,0,-p],[1,0,-p],[p,1,0],[0,p,1],[-1,0,p],[-p,-1,0],[0,-p,-1],[p,-1,0],[1,0,p],[0,-p,1]],[]);t.setIndices(),t.calcCoeffs(),t.createInnerFacets(),t.edgeVecsABOB(),t.mapABOBtoOBOA(),t.mapABOBtoBAOA();for(let s=0;s<t.IDATA.face.length;s++)t.MapToFace(s,e),e.innerToData(s,t),t.IDATA.edgematch[s][1]==="B"&&e.mapABOBtoDATA(s,t),t.IDATA.edgematch[s][1]==="O"&&e.mapOBOAtoDATA(s,t),t.IDATA.edgematch[s][3]==="A"&&e.mapBAOAtoDATA(s,t);e.orderData(t);const a=1;return e.vertex=e.vertex.map(function(s){const i=s[0],o=s[1],r=s[2],h=Math.sqrt(i*i+o*o+r*r);return s[0]*=a/h,s[1]*=a/h,s[2]*=a/h,s}),e}}function ge(M,t,e=null){let a=t.m||1;a!==Math.floor(a)&&T.Warn("m not an integer only floor(m) used");let s=t.n||0;if(s!==Math.floor(s)&&T.Warn("n not an integer only floor(n) used"),s>a){const f=s;s=a,a=f,T.Warn("n > m therefore m and n swapped")}const i=new S;i.build(a,s);const r={custom:P.BuildGeodesicData(i),size:t.size,sizeX:t.sizeX,sizeY:t.sizeY,sizeZ:t.sizeZ,faceUV:t.faceUV,faceColors:t.faceColors,flat:t.flat,updatable:t.updatable,sideOrientation:t.sideOrientation,frontUVs:t.frontUVs,backUVs:t.backUVs};return W(M,r,e)}function Oe(M,t){const e=M.size,a=M.sizeX||e||1,s=M.sizeY||e||1,i=M.sizeZ||e||1,o=M.sideOrientation===0?0:M.sideOrientation||j.DEFAULTSIDE,r=new Array,h=new Array,f=new Array,y=new Array;let g=1/0,d=-1/0,w=1/0,A=-1/0;for(let D=0;D<t.vertex.length;D++)g=Math.min(g,t.vertex[D][0]*a),d=Math.max(d,t.vertex[D][0]*a),w=Math.min(w,t.vertex[D][1]*s),A=Math.max(A,t.vertex[D][1]*s);let B=0;for(let D=0;D<t.face.length;D++){const O=t.face[D],b=I.FromArray(t.vertex[O[0]]),l=I.FromArray(t.vertex[O[2]]),n=I.FromArray(t.vertex[O[1]]),c=l.subtract(b),V=n.subtract(b),z=I.Cross(V,c).normalize();for(let x=0;x<O.length;x++){f.push(z.x,z.y,z.z);const F=t.vertex[O[x]];r.push(F[0]*a,F[1]*s,F[2]*i);const C=(F[1]*s-w)/(A-w);y.push((F[0]*a-g)/(d-g),N.UseOpenGLOrientationForUV?1-C:C)}for(let x=0;x<O.length-2;x++)h.push(B,B+x+2,B+x+1);B+=O.length}j._ComputeSides(o,r,h,f,y);const u=new j;return u.positions=r,u.indices=h,u.normals=f,u.uvs=y,u}function ve(M,t,e=null){const a=t.size,s=t.sizeX||a||1,i=t.sizeY||a||1,o=t.sizeZ||a||1;let r=t.m||1;r!==Math.floor(r)&&T.Warn("m not an integer only floor(m) used");let h=t.n||0;if(h!==Math.floor(h)&&T.Warn("n not an integer only floor(n) used"),h>r){const A=h;h=r,r=A,T.Warn("n > m therefore m and n swapped")}const f=new S;f.build(r,h);const y=P.BuildGeodesicData(f),g=y.toGoldbergPolyhedronData(),d=new Y(M,e);t.sideOrientation=R._GetDefaultSideOrientation(t.sideOrientation),d._originalBuilderSideOrientation=t.sideOrientation,Oe(t,g).applyToMesh(d,t.updatable),d.goldbergData.nbSharedFaces=y.sharedNodes,d.goldbergData.nbUnsharedFaces=y.poleNodes,d.goldbergData.adjacentFaces=y.adjacentFaces,d.goldbergData.nbFaces=d.goldbergData.nbSharedFaces+d.goldbergData.nbUnsharedFaces,d.goldbergData.nbFacesAtPole=(d.goldbergData.nbUnsharedFaces-12)/12;for(let A=0;A<y.vertex.length;A++)d.goldbergData.faceCenters.push(I.FromArray(y.vertex[A])),d.goldbergData.faceCenters[A].x*=s,d.goldbergData.faceCenters[A].y*=i,d.goldbergData.faceCenters[A].z*=o,d.goldbergData.faceColors.push(new E(1,1,1,1));for(let A=0;A<g.face.length;A++){const B=g.face[A],u=I.FromArray(g.vertex[B[0]]),D=I.FromArray(g.vertex[B[2]]),O=I.FromArray(g.vertex[B[1]]),b=D.subtract(u),l=O.subtract(u),n=I.Cross(l,b).normalize(),c=I.Cross(l,n).normalize();d.goldbergData.faceXaxis.push(l.normalize()),d.goldbergData.faceYaxis.push(n),d.goldbergData.faceZaxis.push(c)}return d}const De={CreateBox:q,CreateTiledBox:H,CreateSphere:k,CreateDisc:K,CreateIcoSphere:Q,CreateRibbon:J,CreateCylinder:_,CreateTorus:$,CreateTorusKnot:ee,CreateLineSystem:te,CreateLines:se,CreateDashedLines:ae,ExtrudeShape:oe,ExtrudeShapeCustom:ne,CreateLathe:ie,CreateTiledPlane:re,CreatePlane:ce,CreateGround:he,CreateTiledGround:le,CreateGroundFromHeightMap:fe,CreatePolygon:xe,ExtrudePolygon:de,CreateTube:Ae,CreatePolyhedron:W,CreateGeodesic:ge,CreateGoldberg:ve,CreateDecal:ue,CreateCapsule:ye,CreateText:Be};export{De as M};
